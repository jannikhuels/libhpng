Formula Parser libhpng:

- Eingabe muss mit einer Zeitangabe beginnen der Form "x.x:", z.B.: "3.0:" (muss Dezimalpunkt enthalten und mit Doppelpunkt enden")
- nach Zeitangabe entweder 
	1. "P=?" für Mittelwert / Konfidenzintervall (zusätzliche Parameter benötigt: Intervallbreite, Confidence Level) 
	2. "P~x.x" z.B. "P<0.5" oder "P>=0.1" für Hypothesentest, "~" kann "<", "<=", "=", ">" oder ">=" sein

- dahinter in Klammern () eine Psi-Formel, wobei Klammern beliebig verschachtelt werden können. Im Folgenden seien a1, a2 atomare Eigenschaften (siehe unten).

	1. einfache atomare Form "a1"
	2. Verneinung der Form "!a1"
	3. Und-Verknüpfung der Form "AND(a1, a2)"
	4. Oder-Verknüpfung der Form "OR(a1, a2)"
	5. Until der Form "U[x.x, y.y](a1, a2)" wobei x.x und y.y die Zeitgrenzen sind

- Atomare Eigenschaften, "id" sei je nach Eigenschaft eine Place ID, Transition ID oder Guard Arc ID und "~" kann "<", "<=", "=", ">" oder ">=" sein
	
	1. Vergleich Fluid Level Continuous Place "fluidlevel('id')~x.x" (Dezimalzahl)
 	2. Vergleich Drift Continuous Place "drift('id')~x.x" (Dezimalzahl)
	3  Upper Boundary erreicht Continuous Place "uboundary('id')
	4. Lower Boundary erreicht Continuous Place "lboundary('id')
	5. Vergleich Anzahl Tokens Discrete Place "tokens('id')~x" (Ganzzahl ohne Dezimalpunkt)
	6. Transition enabled Status "enabled('id')"
	7. Vergleich Clock Deterministic Transition "clock('id')~x.x" (Dezimalzahl)
	8. Vergleich Anzahl Firings General Transition "firings('id')~x" (Ganzzahl)
	9. Guard Arc Condition erfüllt "condition('id')"
